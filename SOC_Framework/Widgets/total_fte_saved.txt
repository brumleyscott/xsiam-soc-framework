Name=Total FTEs Saved
Description=How many FTEs time it would have taken (Last 7 Days)
XQL=
config timeframe between "-7d" and "now"
| dataset = xsiam_playbookmetrics_raw
| alter Tasks = Tasks->[]
| arrayexpand Tasks

// TODO apply a datamodel to these two objects instead (Tasks and Alert)
| alter
taskState = tasks->state,
taskType = tasks->type,
taskId = tasks->id,
taskName = tasks->name,
scriptID = tasks->scriptId,
incidentID = alert->parentXDRIncident,
alertID = alert->id,
alertName = alert->name,
alertType = alert->type,
playbookId = alert->playbookId

| filter taskType not in ("start", "title", "condition")
| filter playbookId != ""

// Since the job which posts this data runs every 15 min there may be duplicate data the more frequent it is run
| alter dedupkey = concat(incidentID,taskId)
| dedup dedupkey

// Filter for just automation
| filter alerttype != "Unclassified"
| filter taskState = "Completed"
| filter tasktype = "regular"

//TODO make this a lookup table and join instead to make it scalable
| join type = inner (dataset = value_tags
| fields Category as value_category, ScriptID as value_scriptid, `Tag` as value_tag, TaskName as value_taskname, Time as value_time
) as vt (scriptID =  vt.value_scriptid)
| fields value_category, value_scriptid, value_tag, value_taskname, value_time

| filter value_category  = "enrichment" or value_category  = "remediation" or value_category  = "assessment" or value_category  = "escalation" or value_category  = "triage"
| alter soc_event_mintutes = to_integer(value_time )
| comp sum(soc_event_mintutes) as total_soc_minutes
| alter total_soc_hours = divide(total_soc_minutes,60)
| alter total_fte_saved = divide(total_soc_hours, 40)

| view graph type = single subtype = standard header = "Total FTEs Saved (last 7 days)" yaxis = total_fte_saved dataunit = "FTEs"